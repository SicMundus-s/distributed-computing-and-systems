apiVersion: v1
kind: Service
metadata:
  name: etcd
spec:
  clusterIP: None
  ports:
    - port: 2379
      name: client
    - port: 2380
      name: peer
  selector:
    app: etcd

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
spec:
  serviceName: etcd
  replicas: 3
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chmod -R 700 /var/lib/etcd"]
          volumeMounts:
            - name: etcd-storage
              mountPath: /var/lib/etcd
      containers:
        - name: etcd
          image: quay.io/coreos/etcd:v3.4.15
          imagePullPolicy: Always
          env:
            - name: ETCD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCD_DATA_DIR
              value: /var/lib/etcd
            - name: ETCD_INITIAL_CLUSTER_STATE
              value: "new"
            - name: ETCD_INITIAL_CLUSTER
              value: "etcd-0=http://etcd-0.etcd.default.svc.cluster.local:2380,etcd-1=http://etcd-1.etcd.default.svc.cluster.local:2380,etcd-2=http://etcd-2.etcd.default.svc.cluster.local:2380"
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: "http://$(ETCD_NAME).etcd.default.svc.cluster.local:2380"
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "http://$(ETCD_NAME).etcd.default.svc.cluster.local:2379"
            - name: ETCD_LISTEN_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_LISTEN_PEER_URLS
              value: "http://0.0.0.0:2380"
          ports:
            - containerPort: 2379
            - containerPort: 2380
          volumeMounts:
            - name: etcd-storage
              mountPath: /var/lib/etcd
  volumeClaimTemplates:
    - metadata:
        name: etcd-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-english-data-service
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres
  selector:
    app: postgres-english-data

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 3
  selector:
    matchLabels:
      app: postgres-english-data
  template:
    metadata:
      labels:
        app: postgres-english-data
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "learningEnglish_data"
            - name: PATRONI_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PATRONI_SCOPE
              value: "postgres"
            - name: PATRONI_POSTGRESQL_DATA_DIR
              value: "/var/lib/postgresql/data/pgdata"
            - name: PATRONI_POSTGRESQL_LISTEN
              value: "0.0.0.0:5432"
            - name: PATRONI_RESTAPI_LISTEN
              value: "0.0.0.0:8008"
            - name: PATRONI_ETCD_URL
              value: "http://etcd:2379"
          ports:
            - containerPort: 5432
            - containerPort: 8008
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi